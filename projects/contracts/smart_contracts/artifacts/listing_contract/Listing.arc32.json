{
    "hints": {
        "createApplication(asset,address)void": {
            "call_config": {
                "no_op": "CREATE"
            }
        },
        "recordNegotiatedPrice(uint64)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "optinToListingAsset(pay,uint64)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "purchase(pay,address)void": {
            "call_config": {
                "delete_application": "CALL"
            }
        },
        "delist(address)void": {
            "call_config": {
                "delete_application": "CALL"
            }
        },
        "getInfo()(uint64,uint64,string,string,uint64,address)": {
            "read_only": true,
            "call_config": {
                "no_op": "CALL"
            },
            "structs": {
                "output": {
                    "name": "ListingInfo",
                    "elements": [
                        [
                            "id",
                            "uint64"
                        ],
                        [
                            "assetID",
                            "uint64"
                        ],
                        [
                            "name",
                            "string"
                        ],
                        [
                            "unitName",
                            "string"
                        ],
                        [
                            "decimals",
                            "uint64"
                        ],
                        [
                            "seller",
                            "address"
                        ]
                    ]
                }
            }
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYXJjNC9pbmRleC5kLnRzOjpDb250cmFjdC5hcHByb3ZhbFByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBpbnRjYmxvY2sgMCAxIDQgNQogICAgYnl0ZWNibG9jayAiYXNzZXQiICJzZWxsZXIiICJuZWdvdGlhdGVkX3ByaWNlIgogICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgIGJueiBtYWluX2FmdGVyX2lmX2Vsc2VAMgogICAgLy8gc21hcnRfY29udHJhY3RzL2xpc3RpbmdfY29udHJhY3QvY29uc3RhbnRzLnRzOjcKICAgIC8vIGV4cG9ydCBjb25zdCBORUdPVElBVEVEX1BSSUNFX0tFWSA9ICduZWdvdGlhdGVkX3ByaWNlJwogICAgYnl0ZWNfMiAvLyAibmVnb3RpYXRlZF9wcmljZSIKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9saXN0aW5nX2NvbnRyYWN0L2NvbnRyYWN0LmFsZ28udHM6MzgKICAgIC8vIG5lZ290aWF0ZWRQcmljZSA9IEdsb2JhbFN0YXRlPHVpbnQ2ND4oeyBpbml0aWFsVmFsdWU6IDAsIGtleTogTkVHT1RJQVRFRF9QUklDRV9LRVkgfSkKICAgIGludGNfMCAvLyAwCiAgICBhcHBfZ2xvYmFsX3B1dAoKbWFpbl9hZnRlcl9pZl9lbHNlQDI6CiAgICAvLyBzbWFydF9jb250cmFjdHMvbGlzdGluZ19jb250cmFjdC9jb250cmFjdC5hbGdvLnRzOjM0CiAgICAvLyBleHBvcnQgY2xhc3MgTGlzdGluZyBleHRlbmRzIENvbnRyYWN0IHsKICAgIHR4biBOdW1BcHBBcmdzCiAgICBieiBtYWluX2FmdGVyX2lmX2Vsc2VAMTQKICAgIHB1c2hieXRlc3MgMHg3Y2U3ZDhiOCAweGE2Mjg3NTBkIDB4YzYwYmQxODQgMHg1MmM5MDZhZSAweDY4ZTg2MzQzIDB4MDA4YzY5MDQgLy8gbWV0aG9kICJjcmVhdGVBcHBsaWNhdGlvbihhc3NldCxhZGRyZXNzKXZvaWQiLCBtZXRob2QgInJlY29yZE5lZ290aWF0ZWRQcmljZSh1aW50NjQpdm9pZCIsIG1ldGhvZCAib3B0aW5Ub0xpc3RpbmdBc3NldChwYXksdWludDY0KXZvaWQiLCBtZXRob2QgInB1cmNoYXNlKHBheSxhZGRyZXNzKXZvaWQiLCBtZXRob2QgImRlbGlzdChhZGRyZXNzKXZvaWQiLCBtZXRob2QgImdldEluZm8oKSh1aW50NjQsdWludDY0LHN0cmluZyxzdHJpbmcsdWludDY0LGFkZHJlc3MpIgogICAgdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMAogICAgbWF0Y2ggbWFpbl9jcmVhdGVBcHBsaWNhdGlvbl9yb3V0ZUA1IG1haW5fcmVjb3JkTmVnb3RpYXRlZFByaWNlX3JvdXRlQDYgbWFpbl9vcHRpblRvTGlzdGluZ0Fzc2V0X3JvdXRlQDcgbWFpbl9wdXJjaGFzZV9yb3V0ZUA4IG1haW5fZGVsaXN0X3JvdXRlQDkgbWFpbl9nZXRJbmZvX3JvdXRlQDEwCgptYWluX2FmdGVyX2lmX2Vsc2VAMTQ6CiAgICAvLyBzbWFydF9jb250cmFjdHMvbGlzdGluZ19jb250cmFjdC9jb250cmFjdC5hbGdvLnRzOjM0CiAgICAvLyBleHBvcnQgY2xhc3MgTGlzdGluZyBleHRlbmRzIENvbnRyYWN0IHsKICAgIGludGNfMCAvLyAwCiAgICByZXR1cm4KCm1haW5fZ2V0SW5mb19yb3V0ZUAxMDoKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9saXN0aW5nX2NvbnRyYWN0L2NvbnRyYWN0LmFsZ28udHM6MTU1CiAgICAvLyBAYWJpbWV0aG9kKHsgcmVhZG9ubHk6IHRydWUgfSkKICAgIHR4biBPbkNvbXBsZXRpb24KICAgICEKICAgIGFzc2VydCAvLyBPbkNvbXBsZXRpb24gaXMgbm90IE5vT3AKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICBhc3NlcnQgLy8gY2FuIG9ubHkgY2FsbCB3aGVuIG5vdCBjcmVhdGluZwogICAgY2FsbHN1YiBnZXRJbmZvCiAgICB1bmNvdmVyIDUKICAgIGl0b2IKICAgIHVuY292ZXIgNQogICAgaXRvYgogICAgZGlnIDUKICAgIGxlbgogICAgaXRvYgogICAgZXh0cmFjdCA2IDIKICAgIHVuY292ZXIgNgogICAgY29uY2F0CiAgICBkaWcgNQogICAgbGVuCiAgICBpdG9iCiAgICBleHRyYWN0IDYgMgogICAgdW5jb3ZlciA2CiAgICBjb25jYXQKICAgIHVuY292ZXIgNQogICAgaXRvYgogICAgdW5jb3ZlciA0CiAgICB1bmNvdmVyIDQKICAgIGNvbmNhdAogICAgcHVzaGJ5dGVzIDB4MDAzYwogICAgY29uY2F0CiAgICBkaWcgMwogICAgbGVuCiAgICBwdXNoaW50IDYwIC8vIDYwCiAgICArCiAgICBpdG9iCiAgICBleHRyYWN0IDYgMgogICAgY29uY2F0CiAgICBzd2FwCiAgICBjb25jYXQKICAgIHVuY292ZXIgMwogICAgY29uY2F0CiAgICB1bmNvdmVyIDIKICAgIGNvbmNhdAogICAgc3dhcAogICAgY29uY2F0CiAgICBwdXNoYnl0ZXMgMHgxNTFmN2M3NQogICAgc3dhcAogICAgY29uY2F0CiAgICBsb2cKICAgIGludGNfMSAvLyAxCiAgICByZXR1cm4KCm1haW5fZGVsaXN0X3JvdXRlQDk6CiAgICAvLyBzbWFydF9jb250cmFjdHMvbGlzdGluZ19jb250cmFjdC9jb250cmFjdC5hbGdvLnRzOjEzNQogICAgLy8gQGFiaW1ldGhvZCh7IGFsbG93QWN0aW9uczogJ0RlbGV0ZUFwcGxpY2F0aW9uJyB9KQogICAgdHhuIE9uQ29tcGxldGlvbgogICAgaW50Y18zIC8vIERlbGV0ZUFwcGxpY2F0aW9uCiAgICA9PQogICAgYXNzZXJ0IC8vIE9uQ29tcGxldGlvbiBpcyBub3QgRGVsZXRlQXBwbGljYXRpb24KICAgIHR4biBBcHBsaWNhdGlvbklECiAgICBhc3NlcnQgLy8gY2FuIG9ubHkgY2FsbCB3aGVuIG5vdCBjcmVhdGluZwogICAgLy8gc21hcnRfY29udHJhY3RzL2xpc3RpbmdfY29udHJhY3QvY29udHJhY3QuYWxnby50czozNAogICAgLy8gZXhwb3J0IGNsYXNzIExpc3RpbmcgZXh0ZW5kcyBDb250cmFjdCB7CiAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyAxCiAgICAvLyBzbWFydF9jb250cmFjdHMvbGlzdGluZ19jb250cmFjdC9jb250cmFjdC5hbGdvLnRzOjEzNQogICAgLy8gQGFiaW1ldGhvZCh7IGFsbG93QWN0aW9uczogJ0RlbGV0ZUFwcGxpY2F0aW9uJyB9KQogICAgY2FsbHN1YiBkZWxpc3QKICAgIGludGNfMSAvLyAxCiAgICByZXR1cm4KCm1haW5fcHVyY2hhc2Vfcm91dGVAODoKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9saXN0aW5nX2NvbnRyYWN0L2NvbnRyYWN0LmFsZ28udHM6MTE4CiAgICAvLyBAYWJpbWV0aG9kKHsgYWxsb3dBY3Rpb25zOiAnRGVsZXRlQXBwbGljYXRpb24nIH0pCiAgICB0eG4gT25Db21wbGV0aW9uCiAgICBpbnRjXzMgLy8gRGVsZXRlQXBwbGljYXRpb24KICAgID09CiAgICBhc3NlcnQgLy8gT25Db21wbGV0aW9uIGlzIG5vdCBEZWxldGVBcHBsaWNhdGlvbgogICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgIGFzc2VydCAvLyBjYW4gb25seSBjYWxsIHdoZW4gbm90IGNyZWF0aW5nCiAgICAvLyBzbWFydF9jb250cmFjdHMvbGlzdGluZ19jb250cmFjdC9jb250cmFjdC5hbGdvLnRzOjM0CiAgICAvLyBleHBvcnQgY2xhc3MgTGlzdGluZyBleHRlbmRzIENvbnRyYWN0IHsKICAgIHR4biBHcm91cEluZGV4CiAgICBpbnRjXzEgLy8gMQogICAgLQogICAgZHVwCiAgICBndHhucyBUeXBlRW51bQogICAgaW50Y18xIC8vIHBheQogICAgPT0KICAgIGFzc2VydCAvLyB0cmFuc2FjdGlvbiB0eXBlIGlzIHBheQogICAgdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQogICAgLy8gc21hcnRfY29udHJhY3RzL2xpc3RpbmdfY29udHJhY3QvY29udHJhY3QuYWxnby50czoxMTgKICAgIC8vIEBhYmltZXRob2QoeyBhbGxvd0FjdGlvbnM6ICdEZWxldGVBcHBsaWNhdGlvbicgfSkKICAgIGNhbGxzdWIgcHVyY2hhc2UKICAgIGludGNfMSAvLyAxCiAgICByZXR1cm4KCm1haW5fb3B0aW5Ub0xpc3RpbmdBc3NldF9yb3V0ZUA3OgogICAgLy8gc21hcnRfY29udHJhY3RzL2xpc3RpbmdfY29udHJhY3QvY29udHJhY3QuYWxnby50czo5NgogICAgLy8gcHVibGljIG9wdGluVG9MaXN0aW5nQXNzZXQocGF5bWVudDogZ3R4bi5QYXltZW50VHhuLCBhc3NldDogdWludDY0KTogdm9pZCB7CiAgICB0eG4gT25Db21wbGV0aW9uCiAgICAhCiAgICBhc3NlcnQgLy8gT25Db21wbGV0aW9uIGlzIG5vdCBOb09wCiAgICB0eG4gQXBwbGljYXRpb25JRAogICAgYXNzZXJ0IC8vIGNhbiBvbmx5IGNhbGwgd2hlbiBub3QgY3JlYXRpbmcKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9saXN0aW5nX2NvbnRyYWN0L2NvbnRyYWN0LmFsZ28udHM6MzQKICAgIC8vIGV4cG9ydCBjbGFzcyBMaXN0aW5nIGV4dGVuZHMgQ29udHJhY3QgewogICAgdHhuIEdyb3VwSW5kZXgKICAgIGludGNfMSAvLyAxCiAgICAtCiAgICBkdXAKICAgIGd0eG5zIFR5cGVFbnVtCiAgICBpbnRjXzEgLy8gcGF5CiAgICA9PQogICAgYXNzZXJ0IC8vIHRyYW5zYWN0aW9uIHR5cGUgaXMgcGF5CiAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyAxCiAgICBidG9pCiAgICAvLyBzbWFydF9jb250cmFjdHMvbGlzdGluZ19jb250cmFjdC9jb250cmFjdC5hbGdvLnRzOjk2CiAgICAvLyBwdWJsaWMgb3B0aW5Ub0xpc3RpbmdBc3NldChwYXltZW50OiBndHhuLlBheW1lbnRUeG4sIGFzc2V0OiB1aW50NjQpOiB2b2lkIHsKICAgIGNhbGxzdWIgb3B0aW5Ub0xpc3RpbmdBc3NldAogICAgaW50Y18xIC8vIDEKICAgIHJldHVybgoKbWFpbl9yZWNvcmROZWdvdGlhdGVkUHJpY2Vfcm91dGVANjoKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9saXN0aW5nX2NvbnRyYWN0L2NvbnRyYWN0LmFsZ28udHM6ODYKICAgIC8vIHB1YmxpYyByZWNvcmROZWdvdGlhdGVkUHJpY2UocHJpY2U6IHVpbnQ2NCk6IHZvaWQgewogICAgdHhuIE9uQ29tcGxldGlvbgogICAgIQogICAgYXNzZXJ0IC8vIE9uQ29tcGxldGlvbiBpcyBub3QgTm9PcAogICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgIGFzc2VydCAvLyBjYW4gb25seSBjYWxsIHdoZW4gbm90IGNyZWF0aW5nCiAgICAvLyBzbWFydF9jb250cmFjdHMvbGlzdGluZ19jb250cmFjdC9jb250cmFjdC5hbGdvLnRzOjM0CiAgICAvLyBleHBvcnQgY2xhc3MgTGlzdGluZyBleHRlbmRzIENvbnRyYWN0IHsKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDEKICAgIGJ0b2kKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9saXN0aW5nX2NvbnRyYWN0L2NvbnRyYWN0LmFsZ28udHM6ODYKICAgIC8vIHB1YmxpYyByZWNvcmROZWdvdGlhdGVkUHJpY2UocHJpY2U6IHVpbnQ2NCk6IHZvaWQgewogICAgY2FsbHN1YiByZWNvcmROZWdvdGlhdGVkUHJpY2UKICAgIGludGNfMSAvLyAxCiAgICByZXR1cm4KCm1haW5fY3JlYXRlQXBwbGljYXRpb25fcm91dGVANToKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9saXN0aW5nX2NvbnRyYWN0L2NvbnRyYWN0LmFsZ28udHM6NzgKICAgIC8vIEBhYmltZXRob2QoeyBvbkNyZWF0ZTogJ3JlcXVpcmUnIH0pCiAgICB0eG4gT25Db21wbGV0aW9uCiAgICAhCiAgICBhc3NlcnQgLy8gT25Db21wbGV0aW9uIGlzIG5vdCBOb09wCiAgICB0eG4gQXBwbGljYXRpb25JRAogICAgIQogICAgYXNzZXJ0IC8vIGNhbiBvbmx5IGNhbGwgd2hlbiBjcmVhdGluZwogICAgLy8gc21hcnRfY29udHJhY3RzL2xpc3RpbmdfY29udHJhY3QvY29udHJhY3QuYWxnby50czozNAogICAgLy8gZXhwb3J0IGNsYXNzIExpc3RpbmcgZXh0ZW5kcyBDb250cmFjdCB7CiAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyAxCiAgICBidG9pCiAgICB0eG5hcyBBc3NldHMKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDIKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9saXN0aW5nX2NvbnRyYWN0L2NvbnRyYWN0LmFsZ28udHM6NzgKICAgIC8vIEBhYmltZXRob2QoeyBvbkNyZWF0ZTogJ3JlcXVpcmUnIH0pCiAgICBjYWxsc3ViIGNyZWF0ZUFwcGxpY2F0aW9uCiAgICBpbnRjXzEgLy8gMQogICAgcmV0dXJuCgoKLy8gc21hcnRfY29udHJhY3RzL2xpc3RpbmdfY29udHJhY3QvY29udHJhY3QuYWxnby50czo6TGlzdGluZy5jcmVhdGVBcHBsaWNhdGlvbihhc3NldDogdWludDY0LCBzZWxsZXI6IGJ5dGVzKSAtPiB2b2lkOgpjcmVhdGVBcHBsaWNhdGlvbjoKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9saXN0aW5nX2NvbnRyYWN0L2NvbnRyYWN0LmFsZ28udHM6NzgtNzkKICAgIC8vIEBhYmltZXRob2QoeyBvbkNyZWF0ZTogJ3JlcXVpcmUnIH0pCiAgICAvLyBwdWJsaWMgY3JlYXRlQXBwbGljYXRpb24oYXNzZXQ6IEFzc2V0LCBzZWxsZXI6IEFkZHJlc3MpOiB2b2lkIHsKICAgIHByb3RvIDIgMAogICAgLy8gc21hcnRfY29udHJhY3RzL2xpc3RpbmdfY29udHJhY3QvY29udHJhY3QuYWxnby50czo4MAogICAgLy8gYXNzZXJ0KEdsb2JhbC5jYWxsZXJBcHBsaWNhdGlvbklkICE9PSAwLCBNVVNUX0JFX0NBTExFRF9GUk9NX0ZBQ1RPUlkpCiAgICBnbG9iYWwgQ2FsbGVyQXBwbGljYXRpb25JRAogICAgYXNzZXJ0IC8vIG11c3QgYmUgY2FsbGVkIGZyb20gdGhlIGZhY3RvcnkKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9saXN0aW5nX2NvbnRyYWN0L2NvbnN0YW50cy50czo4CiAgICAvLyBleHBvcnQgY29uc3QgQVNTRVRfS0VZID0gJ2Fzc2V0JwogICAgYnl0ZWNfMCAvLyAiYXNzZXQiCiAgICAvLyBzbWFydF9jb250cmFjdHMvbGlzdGluZ19jb250cmFjdC9jb250cmFjdC5hbGdvLnRzOjgyCiAgICAvLyB0aGlzLmFzc2V0LnZhbHVlID0gYXNzZXQKICAgIGZyYW1lX2RpZyAtMgogICAgYXBwX2dsb2JhbF9wdXQKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9saXN0aW5nX2NvbnRyYWN0L2NvbnN0YW50cy50czo5CiAgICAvLyBleHBvcnQgY29uc3QgU0VMTEVSX0tFWSA9ICdzZWxsZXInCiAgICBieXRlY18xIC8vICJzZWxsZXIiCiAgICAvLyBzbWFydF9jb250cmFjdHMvbGlzdGluZ19jb250cmFjdC9jb250cmFjdC5hbGdvLnRzOjgzCiAgICAvLyB0aGlzLnNlbGxlci52YWx1ZSA9IHNlbGxlcgogICAgZnJhbWVfZGlnIC0xCiAgICBhcHBfZ2xvYmFsX3B1dAogICAgcmV0c3ViCgoKLy8gc21hcnRfY29udHJhY3RzL2xpc3RpbmdfY29udHJhY3QvY29udHJhY3QuYWxnby50czo6TGlzdGluZy5yZWNvcmROZWdvdGlhdGVkUHJpY2UocHJpY2U6IHVpbnQ2NCkgLT4gdm9pZDoKcmVjb3JkTmVnb3RpYXRlZFByaWNlOgogICAgLy8gc21hcnRfY29udHJhY3RzL2xpc3RpbmdfY29udHJhY3QvY29udHJhY3QuYWxnby50czo4NgogICAgLy8gcHVibGljIHJlY29yZE5lZ290aWF0ZWRQcmljZShwcmljZTogdWludDY0KTogdm9pZCB7CiAgICBwcm90byAxIDAKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9saXN0aW5nX2NvbnRyYWN0L2NvbnRyYWN0LmFsZ28udHM6ODcKICAgIC8vIGFzc2VydChUeG4uc2VuZGVyID09PSB0aGlzLnNlbGxlci52YWx1ZS5uYXRpdmUsIE1VU1RfQkVfQ0FMTEVEX0ZST01fRkFDVE9SWSkKICAgIHR4biBTZW5kZXIKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9saXN0aW5nX2NvbnRyYWN0L2NvbnN0YW50cy50czo5CiAgICAvLyBleHBvcnQgY29uc3QgU0VMTEVSX0tFWSA9ICdzZWxsZXInCiAgICBpbnRjXzAgLy8gMAogICAgYnl0ZWNfMSAvLyAic2VsbGVyIgogICAgYXBwX2dsb2JhbF9nZXRfZXgKICAgIGFzc2VydCAvLyBjaGVjayBHbG9iYWxTdGF0ZSBleGlzdHMKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9saXN0aW5nX2NvbnRyYWN0L2NvbnRyYWN0LmFsZ28udHM6ODcKICAgIC8vIGFzc2VydChUeG4uc2VuZGVyID09PSB0aGlzLnNlbGxlci52YWx1ZS5uYXRpdmUsIE1VU1RfQkVfQ0FMTEVEX0ZST01fRkFDVE9SWSkKICAgID09CiAgICBhc3NlcnQgLy8gbXVzdCBiZSBjYWxsZWQgZnJvbSB0aGUgZmFjdG9yeQogICAgLy8gc21hcnRfY29udHJhY3RzL2xpc3RpbmdfY29udHJhY3QvY29uc3RhbnRzLnRzOjcKICAgIC8vIGV4cG9ydCBjb25zdCBORUdPVElBVEVEX1BSSUNFX0tFWSA9ICduZWdvdGlhdGVkX3ByaWNlJwogICAgYnl0ZWNfMiAvLyAibmVnb3RpYXRlZF9wcmljZSIKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9saXN0aW5nX2NvbnRyYWN0L2NvbnRyYWN0LmFsZ28udHM6ODgKICAgIC8vIHRoaXMubmVnb3RpYXRlZFByaWNlLnZhbHVlID0gcHJpY2UKICAgIGZyYW1lX2RpZyAtMQogICAgYXBwX2dsb2JhbF9wdXQKICAgIHJldHN1YgoKCi8vIHNtYXJ0X2NvbnRyYWN0cy9saXN0aW5nX2NvbnRyYWN0L2NvbnRyYWN0LmFsZ28udHM6Okxpc3Rpbmcub3B0aW5Ub0xpc3RpbmdBc3NldChwYXltZW50OiB1aW50NjQsIGFzc2V0OiB1aW50NjQpIC0+IHZvaWQ6Cm9wdGluVG9MaXN0aW5nQXNzZXQ6CiAgICAvLyBzbWFydF9jb250cmFjdHMvbGlzdGluZ19jb250cmFjdC9jb250cmFjdC5hbGdvLnRzOjk2CiAgICAvLyBwdWJsaWMgb3B0aW5Ub0xpc3RpbmdBc3NldChwYXltZW50OiBndHhuLlBheW1lbnRUeG4sIGFzc2V0OiB1aW50NjQpOiB2b2lkIHsKICAgIHByb3RvIDIgMAogICAgLy8gc21hcnRfY29udHJhY3RzL2xpc3RpbmdfY29udHJhY3QvY29udHJhY3QuYWxnby50czo5NwogICAgLy8gYXNzZXJ0KFR4bi5zZW5kZXIgPT09IEdsb2JhbC5jcmVhdG9yQWRkcmVzcywgJ29wdGluVG9MaXN0aW5nQXNzZXQgbXVzdCBiZSBjYWxsZWQgYnkgY3JlYXRvcicpCiAgICB0eG4gU2VuZGVyCiAgICBnbG9iYWwgQ3JlYXRvckFkZHJlc3MKICAgID09CiAgICBhc3NlcnQgLy8gb3B0aW5Ub0xpc3RpbmdBc3NldCBtdXN0IGJlIGNhbGxlZCBieSBjcmVhdG9yCiAgICAvLyBzbWFydF9jb250cmFjdHMvbGlzdGluZ19jb250cmFjdC9jb250cmFjdC5hbGdvLnRzOjk4CiAgICAvLyBhc3NlcnQocGF5bWVudC5yZWNlaXZlciA9PT0gR2xvYmFsLmN1cnJlbnRBcHBsaWNhdGlvbkFkZHJlc3MsICdwYXltZW50IHJlY2VpdmVyIG11c3QgYmUgdGhpcyBhcHAnKQogICAgZnJhbWVfZGlnIC0yCiAgICBndHhucyBSZWNlaXZlcgogICAgZ2xvYmFsIEN1cnJlbnRBcHBsaWNhdGlvbkFkZHJlc3MKICAgID09CiAgICBhc3NlcnQgLy8gcGF5bWVudCByZWNlaXZlciBtdXN0IGJlIHRoaXMgYXBwCiAgICAvLyBzbWFydF9jb250cmFjdHMvbGlzdGluZ19jb250cmFjdC9jb250cmFjdC5hbGdvLnRzOjk5CiAgICAvLyBhc3NlcnQocGF5bWVudC5hbW91bnQgPT09IChHbG9iYWwuYXNzZXRPcHRJbk1pbkJhbGFuY2UgKiAyKSwgJ3BheW1lbnQgYW1vdW50IG11c3QgYmUgYXNzZXQgb3B0aW4gbWluIGJhbGFuY2UgKyBtaW4gYWNjb3VudCBtYnInKQogICAgZnJhbWVfZGlnIC0yCiAgICBndHhucyBBbW91bnQKICAgIGdsb2JhbCBBc3NldE9wdEluTWluQmFsYW5jZQogICAgcHVzaGludCAyIC8vIDIKICAgICoKICAgID09CiAgICBhc3NlcnQgLy8gcGF5bWVudCBhbW91bnQgbXVzdCBiZSBhc3NldCBvcHRpbiBtaW4gYmFsYW5jZSArIG1pbiBhY2NvdW50IG1icgogICAgLy8gc21hcnRfY29udHJhY3RzL2xpc3RpbmdfY29udHJhY3QvY29udHJhY3QuYWxnby50czoxMDEtMTA4CiAgICAvLyBpdHhuCiAgICAvLyAgIC5hc3NldFRyYW5zZmVyKHsKICAgIC8vICAgICBhc3NldFJlY2VpdmVyOiBHbG9iYWwuY3VycmVudEFwcGxpY2F0aW9uQWRkcmVzcywKICAgIC8vICAgICBhc3NldEFtb3VudDogMCwKICAgIC8vICAgICB4ZmVyQXNzZXQ6IGFzc2V0LAogICAgLy8gICAgIGZlZTogMCwKICAgIC8vICAgfSkKICAgIC8vICAgLnN1Ym1pdCgpCiAgICBpdHhuX2JlZ2luCiAgICAvLyBzbWFydF9jb250cmFjdHMvbGlzdGluZ19jb250cmFjdC9jb250cmFjdC5hbGdvLnRzOjEwMwogICAgLy8gYXNzZXRSZWNlaXZlcjogR2xvYmFsLmN1cnJlbnRBcHBsaWNhdGlvbkFkZHJlc3MsCiAgICBnbG9iYWwgQ3VycmVudEFwcGxpY2F0aW9uQWRkcmVzcwogICAgZnJhbWVfZGlnIC0xCiAgICBpdHhuX2ZpZWxkIFhmZXJBc3NldAogICAgLy8gc21hcnRfY29udHJhY3RzL2xpc3RpbmdfY29udHJhY3QvY29udHJhY3QuYWxnby50czoxMDQKICAgIC8vIGFzc2V0QW1vdW50OiAwLAogICAgaW50Y18wIC8vIDAKICAgIGl0eG5fZmllbGQgQXNzZXRBbW91bnQKICAgIGl0eG5fZmllbGQgQXNzZXRSZWNlaXZlcgogICAgLy8gc21hcnRfY29udHJhY3RzL2xpc3RpbmdfY29udHJhY3QvY29udHJhY3QuYWxnby50czoxMDEtMTA3CiAgICAvLyBpdHhuCiAgICAvLyAgIC5hc3NldFRyYW5zZmVyKHsKICAgIC8vICAgICBhc3NldFJlY2VpdmVyOiBHbG9iYWwuY3VycmVudEFwcGxpY2F0aW9uQWRkcmVzcywKICAgIC8vICAgICBhc3NldEFtb3VudDogMCwKICAgIC8vICAgICB4ZmVyQXNzZXQ6IGFzc2V0LAogICAgLy8gICAgIGZlZTogMCwKICAgIC8vICAgfSkKICAgIGludGNfMiAvLyA0CiAgICBpdHhuX2ZpZWxkIFR5cGVFbnVtCiAgICAvLyBzbWFydF9jb250cmFjdHMvbGlzdGluZ19jb250cmFjdC9jb250cmFjdC5hbGdvLnRzOjEwNgogICAgLy8gZmVlOiAwLAogICAgaW50Y18wIC8vIDAKICAgIGl0eG5fZmllbGQgRmVlCiAgICAvLyBzbWFydF9jb250cmFjdHMvbGlzdGluZ19jb250cmFjdC9jb250cmFjdC5hbGdvLnRzOjEwMS0xMDgKICAgIC8vIGl0eG4KICAgIC8vICAgLmFzc2V0VHJhbnNmZXIoewogICAgLy8gICAgIGFzc2V0UmVjZWl2ZXI6IEdsb2JhbC5jdXJyZW50QXBwbGljYXRpb25BZGRyZXNzLAogICAgLy8gICAgIGFzc2V0QW1vdW50OiAwLAogICAgLy8gICAgIHhmZXJBc3NldDogYXNzZXQsCiAgICAvLyAgICAgZmVlOiAwLAogICAgLy8gICB9KQogICAgLy8gICAuc3VibWl0KCkKICAgIGl0eG5fc3VibWl0CiAgICByZXRzdWIKCgovLyBzbWFydF9jb250cmFjdHMvbGlzdGluZ19jb250cmFjdC9jb250cmFjdC5hbGdvLnRzOjpMaXN0aW5nLnB1cmNoYXNlKHBheW1lbnQ6IHVpbnQ2NCwgYnV5ZXI6IGJ5dGVzKSAtPiB2b2lkOgpwdXJjaGFzZToKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9saXN0aW5nX2NvbnRyYWN0L2NvbnRyYWN0LmFsZ28udHM6MTE4LTExOQogICAgLy8gQGFiaW1ldGhvZCh7IGFsbG93QWN0aW9uczogJ0RlbGV0ZUFwcGxpY2F0aW9uJyB9KQogICAgLy8gcHVibGljIHB1cmNoYXNlKHBheW1lbnQ6IGd0eG4uUGF5bWVudFR4biwgYnV5ZXI6IEFkZHJlc3MpOiB2b2lkIHsKICAgIHByb3RvIDIgMAogICAgLy8gc21hcnRfY29udHJhY3RzL2xpc3RpbmdfY29udHJhY3QvY29udHJhY3QuYWxnby50czoxMjAKICAgIC8vIGFzc2VydChUeG4uc2VuZGVyID09PSBHbG9iYWwuY3JlYXRvckFkZHJlc3MsIE1VU1RfQkVfQ0FMTEVEX0ZST01fRkFDVE9SWSkKICAgIHR4biBTZW5kZXIKICAgIGdsb2JhbCBDcmVhdG9yQWRkcmVzcwogICAgPT0KICAgIGFzc2VydCAvLyBtdXN0IGJlIGNhbGxlZCBmcm9tIHRoZSBmYWN0b3J5CiAgICAvLyBzbWFydF9jb250cmFjdHMvbGlzdGluZ19jb250cmFjdC9jb25zdGFudHMudHM6NwogICAgLy8gZXhwb3J0IGNvbnN0IE5FR09USUFURURfUFJJQ0VfS0VZID0gJ25lZ290aWF0ZWRfcHJpY2UnCiAgICBpbnRjXzAgLy8gMAogICAgYnl0ZWNfMiAvLyAibmVnb3RpYXRlZF9wcmljZSIKICAgIGFwcF9nbG9iYWxfZ2V0X2V4CiAgICBhc3NlcnQgLy8gY2hlY2sgR2xvYmFsU3RhdGUgZXhpc3RzCiAgICAvLyBzbWFydF9jb250cmFjdHMvbGlzdGluZ19jb250cmFjdC9jb250cmFjdC5hbGdvLnRzOjEyMQogICAgLy8gYXNzZXJ0KHRoaXMubmVnb3RpYXRlZFByaWNlLnZhbHVlID4gMCwgUFJJQ0VfTk9UX05FR09USUFURUQpCiAgICBhc3NlcnQgLy8gcHJpY2UgaGFzbid0IGJlZW4gbmVnb3RpYXRlZCB5ZXQKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9saXN0aW5nX2NvbnRyYWN0L2NvbnRyYWN0LmFsZ28udHM6MTIzCiAgICAvLyBhc3NlcnQocGF5bWVudC5zZW5kZXIgPT09IEdsb2JhbC5jcmVhdG9yQWRkcmVzcykKICAgIGZyYW1lX2RpZyAtMgogICAgZ3R4bnMgU2VuZGVyCiAgICBnbG9iYWwgQ3JlYXRvckFkZHJlc3MKICAgID09CiAgICBhc3NlcnQKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9saXN0aW5nX2NvbnRyYWN0L2NvbnRyYWN0LmFsZ28udHM6MTI0CiAgICAvLyBhc3NlcnQocGF5bWVudC5hbW91bnQgPT09IHRoaXMubmVnb3RpYXRlZFByaWNlLnZhbHVlKQogICAgZnJhbWVfZGlnIC0yCiAgICBndHhucyBBbW91bnQKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9saXN0aW5nX2NvbnRyYWN0L2NvbnN0YW50cy50czo3CiAgICAvLyBleHBvcnQgY29uc3QgTkVHT1RJQVRFRF9QUklDRV9LRVkgPSAnbmVnb3RpYXRlZF9wcmljZScKICAgIGludGNfMCAvLyAwCiAgICBieXRlY18yIC8vICJuZWdvdGlhdGVkX3ByaWNlIgogICAgYXBwX2dsb2JhbF9nZXRfZXgKICAgIGFzc2VydCAvLyBjaGVjayBHbG9iYWxTdGF0ZSBleGlzdHMKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9saXN0aW5nX2NvbnRyYWN0L2NvbnRyYWN0LmFsZ28udHM6MTI0CiAgICAvLyBhc3NlcnQocGF5bWVudC5hbW91bnQgPT09IHRoaXMubmVnb3RpYXRlZFByaWNlLnZhbHVlKQogICAgPT0KICAgIGFzc2VydAogICAgLy8gc21hcnRfY29udHJhY3RzL2xpc3RpbmdfY29udHJhY3QvY29udHJhY3QuYWxnby50czoxMjUKICAgIC8vIGFzc2VydChwYXltZW50LnJlY2VpdmVyID09PSBHbG9iYWwuY3VycmVudEFwcGxpY2F0aW9uQWRkcmVzcykKICAgIGZyYW1lX2RpZyAtMgogICAgZ3R4bnMgUmVjZWl2ZXIKICAgIGdsb2JhbCBDdXJyZW50QXBwbGljYXRpb25BZGRyZXNzCiAgICA9PQogICAgYXNzZXJ0CiAgICAvLyBzbWFydF9jb250cmFjdHMvbGlzdGluZ19jb250cmFjdC9jb25zdGFudHMudHM6OAogICAgLy8gZXhwb3J0IGNvbnN0IEFTU0VUX0tFWSA9ICdhc3NldCcKICAgIGludGNfMCAvLyAwCiAgICBieXRlY18wIC8vICJhc3NldCIKICAgIGFwcF9nbG9iYWxfZ2V0X2V4CiAgICBhc3NlcnQgLy8gY2hlY2sgR2xvYmFsU3RhdGUgZXhpc3RzCiAgICAvLyBzbWFydF9jb250cmFjdHMvbGlzdGluZ19jb250cmFjdC9jb250cmFjdC5hbGdvLnRzOjQ1CiAgICAvLyBpZiAoYnV5ZXIuaXNPcHRlZEluKHRoaXMuYXNzZXQudmFsdWUpKSB7CiAgICBmcmFtZV9kaWcgLTEKICAgIHN3YXAKICAgIGFzc2V0X2hvbGRpbmdfZ2V0IEFzc2V0QmFsYW5jZQogICAgYnVyeSAxCiAgICBieiBwdXJjaGFzZV9hZnRlcl9pZl9lbHNlQDMKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9saXN0aW5nX2NvbnRyYWN0L2NvbnRyYWN0LmFsZ28udHM6NDctNTUKICAgIC8vIGl0eG4KICAgIC8vICAgLmFzc2V0VHJhbnNmZXIoewogICAgLy8gICAgIGFzc2V0Q2xvc2VUbzogYnV5ZXIsCiAgICAvLyAgICAgYXNzZXRSZWNlaXZlcjogYnV5ZXIsCiAgICAvLyAgICAgYXNzZXRBbW91bnQ6IHRoaXMuYXNzZXQudmFsdWUuYmFsYW5jZShHbG9iYWwuY3VycmVudEFwcGxpY2F0aW9uQWRkcmVzcyksCiAgICAvLyAgICAgeGZlckFzc2V0OiB0aGlzLmFzc2V0LnZhbHVlLAogICAgLy8gICAgIGZlZTogMCwKICAgIC8vICAgfSkKICAgIC8vICAgLnN1Ym1pdCgpCiAgICBpdHhuX2JlZ2luCiAgICAvLyBzbWFydF9jb250cmFjdHMvbGlzdGluZ19jb250cmFjdC9jb250cmFjdC5hbGdvLnRzOjUxCiAgICAvLyBhc3NldEFtb3VudDogdGhpcy5hc3NldC52YWx1ZS5iYWxhbmNlKEdsb2JhbC5jdXJyZW50QXBwbGljYXRpb25BZGRyZXNzKSwKICAgIGdsb2JhbCBDdXJyZW50QXBwbGljYXRpb25BZGRyZXNzCiAgICAvLyBzbWFydF9jb250cmFjdHMvbGlzdGluZ19jb250cmFjdC9jb25zdGFudHMudHM6OAogICAgLy8gZXhwb3J0IGNvbnN0IEFTU0VUX0tFWSA9ICdhc3NldCcKICAgIGludGNfMCAvLyAwCiAgICBieXRlY18wIC8vICJhc3NldCIKICAgIGFwcF9nbG9iYWxfZ2V0X2V4CiAgICBhc3NlcnQgLy8gY2hlY2sgR2xvYmFsU3RhdGUgZXhpc3RzCiAgICAvLyBzbWFydF9jb250cmFjdHMvbGlzdGluZ19jb250cmFjdC9jb250cmFjdC5hbGdvLnRzOjUxCiAgICAvLyBhc3NldEFtb3VudDogdGhpcy5hc3NldC52YWx1ZS5iYWxhbmNlKEdsb2JhbC5jdXJyZW50QXBwbGljYXRpb25BZGRyZXNzKSwKICAgIGFzc2V0X2hvbGRpbmdfZ2V0IEFzc2V0QmFsYW5jZQogICAgYXNzZXJ0IC8vIGFjY291bnQgb3B0ZWQgaW50byBhc3NldAogICAgLy8gc21hcnRfY29udHJhY3RzL2xpc3RpbmdfY29udHJhY3QvY29uc3RhbnRzLnRzOjgKICAgIC8vIGV4cG9ydCBjb25zdCBBU1NFVF9LRVkgPSAnYXNzZXQnCiAgICBpbnRjXzAgLy8gMAogICAgYnl0ZWNfMCAvLyAiYXNzZXQiCiAgICBhcHBfZ2xvYmFsX2dldF9leAogICAgYXNzZXJ0IC8vIGNoZWNrIEdsb2JhbFN0YXRlIGV4aXN0cwogICAgaXR4bl9maWVsZCBYZmVyQXNzZXQKICAgIGl0eG5fZmllbGQgQXNzZXRBbW91bnQKICAgIGZyYW1lX2RpZyAtMQogICAgaXR4bl9maWVsZCBBc3NldFJlY2VpdmVyCiAgICBmcmFtZV9kaWcgLTEKICAgIGl0eG5fZmllbGQgQXNzZXRDbG9zZVRvCiAgICAvLyBzbWFydF9jb250cmFjdHMvbGlzdGluZ19jb250cmFjdC9jb250cmFjdC5hbGdvLnRzOjQ3LTU0CiAgICAvLyBpdHhuCiAgICAvLyAgIC5hc3NldFRyYW5zZmVyKHsKICAgIC8vICAgICBhc3NldENsb3NlVG86IGJ1eWVyLAogICAgLy8gICAgIGFzc2V0UmVjZWl2ZXI6IGJ1eWVyLAogICAgLy8gICAgIGFzc2V0QW1vdW50OiB0aGlzLmFzc2V0LnZhbHVlLmJhbGFuY2UoR2xvYmFsLmN1cnJlbnRBcHBsaWNhdGlvbkFkZHJlc3MpLAogICAgLy8gICAgIHhmZXJBc3NldDogdGhpcy5hc3NldC52YWx1ZSwKICAgIC8vICAgICBmZWU6IDAsCiAgICAvLyAgIH0pCiAgICBpbnRjXzIgLy8gNAogICAgaXR4bl9maWVsZCBUeXBlRW51bQogICAgLy8gc21hcnRfY29udHJhY3RzL2xpc3RpbmdfY29udHJhY3QvY29udHJhY3QuYWxnby50czo1MwogICAgLy8gZmVlOiAwLAogICAgaW50Y18wIC8vIDAKICAgIGl0eG5fZmllbGQgRmVlCiAgICAvLyBzbWFydF9jb250cmFjdHMvbGlzdGluZ19jb250cmFjdC9jb250cmFjdC5hbGdvLnRzOjQ3LTU1CiAgICAvLyBpdHhuCiAgICAvLyAgIC5hc3NldFRyYW5zZmVyKHsKICAgIC8vICAgICBhc3NldENsb3NlVG86IGJ1eWVyLAogICAgLy8gICAgIGFzc2V0UmVjZWl2ZXI6IGJ1eWVyLAogICAgLy8gICAgIGFzc2V0QW1vdW50OiB0aGlzLmFzc2V0LnZhbHVlLmJhbGFuY2UoR2xvYmFsLmN1cnJlbnRBcHBsaWNhdGlvbkFkZHJlc3MpLAogICAgLy8gICAgIHhmZXJBc3NldDogdGhpcy5hc3NldC52YWx1ZSwKICAgIC8vICAgICBmZWU6IDAsCiAgICAvLyAgIH0pCiAgICAvLyAgIC5zdWJtaXQoKQogICAgaXR4bl9zdWJtaXQKCnB1cmNoYXNlX2FmdGVyX2lmX2Vsc2VAMzoKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9saXN0aW5nX2NvbnRyYWN0L2NvbnRyYWN0LmFsZ28udHM6NjEtNjgKICAgIC8vIGl0eG4KICAgIC8vICAgLnBheW1lbnQoewogICAgLy8gICAgIHJlY2VpdmVyOiB0aGlzLnNlbGxlci52YWx1ZS5uYXRpdmUsCiAgICAvLyAgICAgY2xvc2VSZW1haW5kZXJUbzogdGhpcy5zZWxsZXIudmFsdWUubmF0aXZlLAogICAgLy8gICAgIGZlZTogMCwKICAgIC8vICAgICBub3RlOiB0aGlzLmFzc2V0LnZhbHVlLm5hbWUudG9TdHJpbmcoKSArICcgU29sZCcsCiAgICAvLyAgIH0pCiAgICAvLyAgIC5zdWJtaXQoKQogICAgaXR4bl9iZWdpbgogICAgLy8gc21hcnRfY29udHJhY3RzL2xpc3RpbmdfY29udHJhY3QvY29uc3RhbnRzLnRzOjkKICAgIC8vIGV4cG9ydCBjb25zdCBTRUxMRVJfS0VZID0gJ3NlbGxlcicKICAgIGludGNfMCAvLyAwCiAgICBieXRlY18xIC8vICJzZWxsZXIiCiAgICBhcHBfZ2xvYmFsX2dldF9leAogICAgYXNzZXJ0IC8vIGNoZWNrIEdsb2JhbFN0YXRlIGV4aXN0cwogICAgaW50Y18wIC8vIDAKICAgIGJ5dGVjXzEgLy8gInNlbGxlciIKICAgIGFwcF9nbG9iYWxfZ2V0X2V4CiAgICBhc3NlcnQgLy8gY2hlY2sgR2xvYmFsU3RhdGUgZXhpc3RzCiAgICAvLyBzbWFydF9jb250cmFjdHMvbGlzdGluZ19jb250cmFjdC9jb25zdGFudHMudHM6OAogICAgLy8gZXhwb3J0IGNvbnN0IEFTU0VUX0tFWSA9ICdhc3NldCcKICAgIGludGNfMCAvLyAwCiAgICBieXRlY18wIC8vICJhc3NldCIKICAgIGFwcF9nbG9iYWxfZ2V0X2V4CiAgICBhc3NlcnQgLy8gY2hlY2sgR2xvYmFsU3RhdGUgZXhpc3RzCiAgICAvLyBzbWFydF9jb250cmFjdHMvbGlzdGluZ19jb250cmFjdC9jb250cmFjdC5hbGdvLnRzOjY2CiAgICAvLyBub3RlOiB0aGlzLmFzc2V0LnZhbHVlLm5hbWUudG9TdHJpbmcoKSArICcgU29sZCcsCiAgICBhc3NldF9wYXJhbXNfZ2V0IEFzc2V0TmFtZQogICAgYXNzZXJ0IC8vIGFzc2V0IGV4aXN0cwogICAgcHVzaGJ5dGVzICIgU29sZCIKICAgIGNvbmNhdAogICAgaXR4bl9maWVsZCBOb3RlCiAgICBpdHhuX2ZpZWxkIENsb3NlUmVtYWluZGVyVG8KICAgIGl0eG5fZmllbGQgUmVjZWl2ZXIKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9saXN0aW5nX2NvbnRyYWN0L2NvbnRyYWN0LmFsZ28udHM6NjEtNjcKICAgIC8vIGl0eG4KICAgIC8vICAgLnBheW1lbnQoewogICAgLy8gICAgIHJlY2VpdmVyOiB0aGlzLnNlbGxlci52YWx1ZS5uYXRpdmUsCiAgICAvLyAgICAgY2xvc2VSZW1haW5kZXJUbzogdGhpcy5zZWxsZXIudmFsdWUubmF0aXZlLAogICAgLy8gICAgIGZlZTogMCwKICAgIC8vICAgICBub3RlOiB0aGlzLmFzc2V0LnZhbHVlLm5hbWUudG9TdHJpbmcoKSArICcgU29sZCcsCiAgICAvLyAgIH0pCiAgICBpbnRjXzEgLy8gMQogICAgaXR4bl9maWVsZCBUeXBlRW51bQogICAgLy8gc21hcnRfY29udHJhY3RzL2xpc3RpbmdfY29udHJhY3QvY29udHJhY3QuYWxnby50czo2NQogICAgLy8gZmVlOiAwLAogICAgaW50Y18wIC8vIDAKICAgIGl0eG5fZmllbGQgRmVlCiAgICAvLyBzbWFydF9jb250cmFjdHMvbGlzdGluZ19jb250cmFjdC9jb250cmFjdC5hbGdvLnRzOjYxLTY4CiAgICAvLyBpdHhuCiAgICAvLyAgIC5wYXltZW50KHsKICAgIC8vICAgICByZWNlaXZlcjogdGhpcy5zZWxsZXIudmFsdWUubmF0aXZlLAogICAgLy8gICAgIGNsb3NlUmVtYWluZGVyVG86IHRoaXMuc2VsbGVyLnZhbHVlLm5hdGl2ZSwKICAgIC8vICAgICBmZWU6IDAsCiAgICAvLyAgICAgbm90ZTogdGhpcy5hc3NldC52YWx1ZS5uYW1lLnRvU3RyaW5nKCkgKyAnIFNvbGQnLAogICAgLy8gICB9KQogICAgLy8gICAuc3VibWl0KCkKICAgIGl0eG5fc3VibWl0CiAgICByZXRzdWIKCgovLyBzbWFydF9jb250cmFjdHMvbGlzdGluZ19jb250cmFjdC9jb250cmFjdC5hbGdvLnRzOjpMaXN0aW5nLmRlbGlzdChjYWxsZXI6IGJ5dGVzKSAtPiB2b2lkOgpkZWxpc3Q6CiAgICAvLyBzbWFydF9jb250cmFjdHMvbGlzdGluZ19jb250cmFjdC9jb250cmFjdC5hbGdvLnRzOjEzNS0xMzYKICAgIC8vIEBhYmltZXRob2QoeyBhbGxvd0FjdGlvbnM6ICdEZWxldGVBcHBsaWNhdGlvbicgfSkKICAgIC8vIGRlbGlzdChjYWxsZXI6IEFkZHJlc3MpOiB2b2lkIHsKICAgIHByb3RvIDEgMAogICAgLy8gc21hcnRfY29udHJhY3RzL2xpc3RpbmdfY29udHJhY3QvY29udHJhY3QuYWxnby50czoxMzcKICAgIC8vIGFzc2VydChUeG4uc2VuZGVyID09PSBHbG9iYWwuY3JlYXRvckFkZHJlc3MsIE1VU1RfQkVfQ0FMTEVEX0ZST01fRkFDVE9SWSkKICAgIHR4biBTZW5kZXIKICAgIGdsb2JhbCBDcmVhdG9yQWRkcmVzcwogICAgPT0KICAgIGFzc2VydCAvLyBtdXN0IGJlIGNhbGxlZCBmcm9tIHRoZSBmYWN0b3J5CiAgICAvLyBzbWFydF9jb250cmFjdHMvbGlzdGluZ19jb250cmFjdC9jb25zdGFudHMudHM6OQogICAgLy8gZXhwb3J0IGNvbnN0IFNFTExFUl9LRVkgPSAnc2VsbGVyJwogICAgaW50Y18wIC8vIDAKICAgIGJ5dGVjXzEgLy8gInNlbGxlciIKICAgIGFwcF9nbG9iYWxfZ2V0X2V4CiAgICBhc3NlcnQgLy8gY2hlY2sgR2xvYmFsU3RhdGUgZXhpc3RzCiAgICAvLyBzbWFydF9jb250cmFjdHMvbGlzdGluZ19jb250cmFjdC9jb250cmFjdC5hbGdvLnRzOjEzOAogICAgLy8gYXNzZXJ0KHRoaXMuc2VsbGVyLnZhbHVlID09PSBjYWxsZXIsIE9OTFlfU0VMTEVSX0NBTl9ERUxJU1QpCiAgICBmcmFtZV9kaWcgLTEKICAgID09CiAgICBhc3NlcnQgLy8gb25seSB0aGUgc2VsbGVyIGNhbiBkZWxpc3QKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9saXN0aW5nX2NvbnRyYWN0L2NvbnN0YW50cy50czo5CiAgICAvLyBleHBvcnQgY29uc3QgU0VMTEVSX0tFWSA9ICdzZWxsZXInCiAgICBpbnRjXzAgLy8gMAogICAgYnl0ZWNfMSAvLyAic2VsbGVyIgogICAgYXBwX2dsb2JhbF9nZXRfZXgKICAgIGFzc2VydCAvLyBjaGVjayBHbG9iYWxTdGF0ZSBleGlzdHMKICAgIGludGNfMCAvLyAwCiAgICBieXRlY18xIC8vICJzZWxsZXIiCiAgICBhcHBfZ2xvYmFsX2dldF9leAogICAgYXNzZXJ0IC8vIGNoZWNrIEdsb2JhbFN0YXRlIGV4aXN0cwogICAgLy8gc21hcnRfY29udHJhY3RzL2xpc3RpbmdfY29udHJhY3QvY29uc3RhbnRzLnRzOjgKICAgIC8vIGV4cG9ydCBjb25zdCBBU1NFVF9LRVkgPSAnYXNzZXQnCiAgICBpbnRjXzAgLy8gMAogICAgYnl0ZWNfMCAvLyAiYXNzZXQiCiAgICBhcHBfZ2xvYmFsX2dldF9leAogICAgYXNzZXJ0IC8vIGNoZWNrIEdsb2JhbFN0YXRlIGV4aXN0cwogICAgLy8gc21hcnRfY29udHJhY3RzL2xpc3RpbmdfY29udHJhY3QvY29uc3RhbnRzLnRzOjkKICAgIC8vIGV4cG9ydCBjb25zdCBTRUxMRVJfS0VZID0gJ3NlbGxlcicKICAgIGludGNfMCAvLyAwCiAgICBieXRlY18xIC8vICJzZWxsZXIiCiAgICBhcHBfZ2xvYmFsX2dldF9leAogICAgYXNzZXJ0IC8vIGNoZWNrIEdsb2JhbFN0YXRlIGV4aXN0cwogICAgLy8gc21hcnRfY29udHJhY3RzL2xpc3RpbmdfY29udHJhY3QvY29udHJhY3QuYWxnby50czoxNTIKICAgIC8vIGl0eG4uc3VibWl0R3JvdXAoYXNzZXRUcmFuc2ZlciwgcGF5bWVudCkKICAgIGl0eG5fYmVnaW4KICAgIHN3YXAKICAgIGl0eG5fZmllbGQgWGZlckFzc2V0CiAgICBzd2FwCiAgICBpdHhuX2ZpZWxkIEFzc2V0Q2xvc2VUbwogICAgc3dhcAogICAgaXR4bl9maWVsZCBBc3NldFJlY2VpdmVyCiAgICAvLyBzbWFydF9jb250cmFjdHMvbGlzdGluZ19jb250cmFjdC9jb250cmFjdC5hbGdvLnRzOjE0MC0xNDUKICAgIC8vIGNvbnN0IGFzc2V0VHJhbnNmZXIgPSBpdHhuLmFzc2V0VHJhbnNmZXIoewogICAgLy8gICBhc3NldFJlY2VpdmVyOiB0aGlzLnNlbGxlci52YWx1ZS5uYXRpdmUsCiAgICAvLyAgIGFzc2V0Q2xvc2VUbzogdGhpcy5zZWxsZXIudmFsdWUubmF0aXZlLAogICAgLy8gICB4ZmVyQXNzZXQ6IHRoaXMuYXNzZXQudmFsdWUsCiAgICAvLyAgIGZlZTogMCwKICAgIC8vIH0pCiAgICBpbnRjXzIgLy8gNAogICAgaXR4bl9maWVsZCBUeXBlRW51bQogICAgLy8gc21hcnRfY29udHJhY3RzL2xpc3RpbmdfY29udHJhY3QvY29udHJhY3QuYWxnby50czoxNDQKICAgIC8vIGZlZTogMCwKICAgIGludGNfMCAvLyAwCiAgICBpdHhuX2ZpZWxkIEZlZQogICAgLy8gc21hcnRfY29udHJhY3RzL2xpc3RpbmdfY29udHJhY3QvY29udHJhY3QuYWxnby50czoxNTIKICAgIC8vIGl0eG4uc3VibWl0R3JvdXAoYXNzZXRUcmFuc2ZlciwgcGF5bWVudCkKICAgIGl0eG5fbmV4dAogICAgaXR4bl9maWVsZCBDbG9zZVJlbWFpbmRlclRvCiAgICAvLyBzbWFydF9jb250cmFjdHMvbGlzdGluZ19jb250cmFjdC9jb250cmFjdC5hbGdvLnRzOjE0Ny0xNTAKICAgIC8vIGNvbnN0IHBheW1lbnQgPSBpdHhuLnBheW1lbnQoewogICAgLy8gICBjbG9zZVJlbWFpbmRlclRvOiB0aGlzLnNlbGxlci52YWx1ZS5uYXRpdmUsCiAgICAvLyAgIGZlZTogMCwKICAgIC8vIH0pCiAgICBpbnRjXzEgLy8gMQogICAgaXR4bl9maWVsZCBUeXBlRW51bQogICAgLy8gc21hcnRfY29udHJhY3RzL2xpc3RpbmdfY29udHJhY3QvY29udHJhY3QuYWxnby50czoxNDkKICAgIC8vIGZlZTogMCwKICAgIGludGNfMCAvLyAwCiAgICBpdHhuX2ZpZWxkIEZlZQogICAgLy8gc21hcnRfY29udHJhY3RzL2xpc3RpbmdfY29udHJhY3QvY29udHJhY3QuYWxnby50czoxNTIKICAgIC8vIGl0eG4uc3VibWl0R3JvdXAoYXNzZXRUcmFuc2ZlciwgcGF5bWVudCkKICAgIGl0eG5fc3VibWl0CiAgICByZXRzdWIKCgovLyBzbWFydF9jb250cmFjdHMvbGlzdGluZ19jb250cmFjdC9jb250cmFjdC5hbGdvLnRzOjpMaXN0aW5nLmdldEluZm8oKSAtPiB1aW50NjQsIHVpbnQ2NCwgYnl0ZXMsIGJ5dGVzLCB1aW50NjQsIGJ5dGVzOgpnZXRJbmZvOgogICAgLy8gc21hcnRfY29udHJhY3RzL2xpc3RpbmdfY29udHJhY3QvY29udHJhY3QuYWxnby50czoxNTgKICAgIC8vIGlkOiBHbG9iYWwuY3VycmVudEFwcGxpY2F0aW9uSWQuaWQsCiAgICBnbG9iYWwgQ3VycmVudEFwcGxpY2F0aW9uSUQKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9saXN0aW5nX2NvbnRyYWN0L2NvbnN0YW50cy50czo4CiAgICAvLyBleHBvcnQgY29uc3QgQVNTRVRfS0VZID0gJ2Fzc2V0JwogICAgaW50Y18wIC8vIDAKICAgIGJ5dGVjXzAgLy8gImFzc2V0IgogICAgYXBwX2dsb2JhbF9nZXRfZXgKICAgIGFzc2VydCAvLyBjaGVjayBHbG9iYWxTdGF0ZSBleGlzdHMKICAgIGludGNfMCAvLyAwCiAgICBieXRlY18wIC8vICJhc3NldCIKICAgIGFwcF9nbG9iYWxfZ2V0X2V4CiAgICBhc3NlcnQgLy8gY2hlY2sgR2xvYmFsU3RhdGUgZXhpc3RzCiAgICAvLyBzbWFydF9jb250cmFjdHMvbGlzdGluZ19jb250cmFjdC9jb250cmFjdC5hbGdvLnRzOjE2MAogICAgLy8gbmFtZTogU3RyaW5nKHRoaXMuYXNzZXQudmFsdWUubmFtZSksCiAgICBhc3NldF9wYXJhbXNfZ2V0IEFzc2V0TmFtZQogICAgYXNzZXJ0IC8vIGFzc2V0IGV4aXN0cwogICAgLy8gc21hcnRfY29udHJhY3RzL2xpc3RpbmdfY29udHJhY3QvY29uc3RhbnRzLnRzOjgKICAgIC8vIGV4cG9ydCBjb25zdCBBU1NFVF9LRVkgPSAnYXNzZXQnCiAgICBpbnRjXzAgLy8gMAogICAgYnl0ZWNfMCAvLyAiYXNzZXQiCiAgICBhcHBfZ2xvYmFsX2dldF9leAogICAgYXNzZXJ0IC8vIGNoZWNrIEdsb2JhbFN0YXRlIGV4aXN0cwogICAgLy8gc21hcnRfY29udHJhY3RzL2xpc3RpbmdfY29udHJhY3QvY29udHJhY3QuYWxnby50czoxNjEKICAgIC8vIHVuaXROYW1lOiBTdHJpbmcodGhpcy5hc3NldC52YWx1ZS51bml0TmFtZSksCiAgICBhc3NldF9wYXJhbXNfZ2V0IEFzc2V0VW5pdE5hbWUKICAgIGFzc2VydCAvLyBhc3NldCBleGlzdHMKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9saXN0aW5nX2NvbnRyYWN0L2NvbnN0YW50cy50czo4CiAgICAvLyBleHBvcnQgY29uc3QgQVNTRVRfS0VZID0gJ2Fzc2V0JwogICAgaW50Y18wIC8vIDAKICAgIGJ5dGVjXzAgLy8gImFzc2V0IgogICAgYXBwX2dsb2JhbF9nZXRfZXgKICAgIGFzc2VydCAvLyBjaGVjayBHbG9iYWxTdGF0ZSBleGlzdHMKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9saXN0aW5nX2NvbnRyYWN0L2NvbnRyYWN0LmFsZ28udHM6MTYyCiAgICAvLyBkZWNpbWFsczogdGhpcy5hc3NldC52YWx1ZS5kZWNpbWFscywKICAgIGFzc2V0X3BhcmFtc19nZXQgQXNzZXREZWNpbWFscwogICAgYXNzZXJ0IC8vIGFzc2V0IGV4aXN0cwogICAgLy8gc21hcnRfY29udHJhY3RzL2xpc3RpbmdfY29udHJhY3QvY29uc3RhbnRzLnRzOjkKICAgIC8vIGV4cG9ydCBjb25zdCBTRUxMRVJfS0VZID0gJ3NlbGxlcicKICAgIGludGNfMCAvLyAwCiAgICBieXRlY18xIC8vICJzZWxsZXIiCiAgICBhcHBfZ2xvYmFsX2dldF9leAogICAgYXNzZXJ0IC8vIGNoZWNrIEdsb2JhbFN0YXRlIGV4aXN0cwogICAgLy8gc21hcnRfY29udHJhY3RzL2xpc3RpbmdfY29udHJhY3QvY29udHJhY3QuYWxnby50czoxNTctMTY0CiAgICAvLyByZXR1cm4gewogICAgLy8gICBpZDogR2xvYmFsLmN1cnJlbnRBcHBsaWNhdGlvbklkLmlkLAogICAgLy8gICBhc3NldElEOiB0aGlzLmFzc2V0LnZhbHVlLmlkLAogICAgLy8gICBuYW1lOiBTdHJpbmcodGhpcy5hc3NldC52YWx1ZS5uYW1lKSwKICAgIC8vICAgdW5pdE5hbWU6IFN0cmluZyh0aGlzLmFzc2V0LnZhbHVlLnVuaXROYW1lKSwKICAgIC8vICAgZGVjaW1hbHM6IHRoaXMuYXNzZXQudmFsdWUuZGVjaW1hbHMsCiAgICAvLyAgIHNlbGxlcjogdGhpcy5zZWxsZXIudmFsdWUsCiAgICAvLyB9CiAgICByZXRzdWIK",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "state": {
        "global": {
            "num_byte_slices": 1,
            "num_uints": 2
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {
                "asset": {
                    "type": "uint64",
                    "key": "asset",
                    "descr": "the asset for sale"
                },
                "negotiatedPrice": {
                    "type": "uint64",
                    "key": "negotiated_price"
                },
                "seller": {
                    "type": "bytes",
                    "key": "seller",
                    "descr": "the address selling the asset"
                }
            },
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "Listing",
        "methods": [
            {
                "name": "createApplication",
                "args": [
                    {
                        "type": "asset",
                        "name": "asset",
                        "desc": "the asa ID that is to be sold"
                    },
                    {
                        "type": "address",
                        "name": "seller",
                        "desc": "the wallet of the account selling the asset"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                },
                "desc": "create the listing application"
            },
            {
                "name": "recordNegotiatedPrice",
                "args": [
                    {
                        "type": "uint64",
                        "name": "price"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "optinToListingAsset",
                "args": [
                    {
                        "type": "pay",
                        "name": "payment",
                        "desc": "The payment transaction"
                    },
                    {
                        "type": "uint64",
                        "name": "asset",
                        "desc": "The asset to be opted into"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                },
                "desc": "optin tells the contract to opt into an asa"
            },
            {
                "name": "purchase",
                "args": [
                    {
                        "type": "pay",
                        "name": "payment",
                        "desc": "- the payment for purchasing the asset"
                    },
                    {
                        "type": "address",
                        "name": "buyer",
                        "desc": "- the buyer of the asset"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "delist",
                "args": [
                    {
                        "type": "address",
                        "name": "caller"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                },
                "desc": "Deletes the app and returns the asset/mbr to the seller"
            },
            {
                "name": "getInfo",
                "args": [],
                "readonly": true,
                "returns": {
                    "type": "(uint64,uint64,string,string,uint64,address)"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {}
}