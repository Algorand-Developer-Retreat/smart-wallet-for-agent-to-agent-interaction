{
    "name": "Listing",
    "structs": {},
    "methods": [
        {
            "name": "createListingApplication",
            "args": [
                {
                    "type": "asset",
                    "name": "asset",
                    "desc": "the asa ID that is to be sold"
                },
                {
                    "type": "address",
                    "name": "seller",
                    "desc": "the wallet of the account selling the asset"
                },
                {
                    "type": "uint64",
                    "name": "minimumPriceToAccept",
                    "desc": "the price the asset should be sold for"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [
                    "NoOp"
                ],
                "call": []
            },
            "readonly": false,
            "desc": "create the listing application",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "recordNegotiatedPrice",
            "args": [
                {
                    "type": "uint64",
                    "name": "price"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "optinToListingAsset",
            "args": [
                {
                    "type": "pay",
                    "name": "payment",
                    "desc": "The payment transaction"
                },
                {
                    "type": "uint64",
                    "name": "asset",
                    "desc": "The asset to be opted into"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "optin tells the contract to opt into an asa",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "purchase",
            "args": [
                {
                    "type": "pay",
                    "name": "payment",
                    "desc": "- the payment for purchasing the asset"
                },
                {
                    "type": "address",
                    "name": "buyer",
                    "desc": "- the buyer of the asset"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "DeleteApplication"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "delist",
            "args": [
                {
                    "type": "address",
                    "name": "caller"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "DeleteApplication"
                ]
            },
            "readonly": false,
            "desc": "Deletes the app and returns the asset/mbr to the seller",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "getSeller",
            "args": [],
            "returns": {
                "type": "address"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": true,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 3,
                "bytes": 1
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {
                "asset": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "YXNzZXQ=",
                    "desc": "the asset for sale"
                },
                "minimumPriceToAccept": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "cHJpY2U=",
                    "desc": "the price of the asset"
                },
                "negotiatedPrice": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "bmVnb3RpYXRlZF9wcmljZQ=="
                },
                "seller": {
                    "keyType": "AVMString",
                    "valueType": "address",
                    "key": "c2VsbGVy",
                    "desc": "the address selling the asset"
                }
            },
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        128,
                        144
                    ],
                    "errorMessage": "OnCompletion is not DeleteApplication"
                },
                {
                    "pc": [
                        106,
                        169,
                        195,
                        211
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        381
                    ],
                    "errorMessage": "account opted into asset"
                },
                {
                    "pc": [
                        416
                    ],
                    "errorMessage": "asset exists"
                },
                {
                    "pc": [
                        215
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        109,
                        131,
                        147,
                        172,
                        198
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        330,
                        347,
                        361,
                        378,
                        385,
                        409,
                        413,
                        449,
                        457,
                        461,
                        465,
                        469,
                        500
                    ],
                    "errorMessage": "check GlobalState exists"
                },
                {
                    "pc": [
                        239,
                        267,
                        326,
                        445
                    ],
                    "errorMessage": "must be called from the factory"
                },
                {
                    "pc": [
                        453
                    ],
                    "errorMessage": "only the seller can delist"
                },
                {
                    "pc": [
                        331
                    ],
                    "errorMessage": "price hasn't been negotiated yet"
                },
                {
                    "pc": [
                        157,
                        182
                    ],
                    "errorMessage": "transaction type is pay"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "byteCode": {
        "approval": "CiAEAAEEBSYDBnNlbGxlcgVhc3NldBBuZWdvdGlhdGVkX3ByaWNlMRhAAAMqImcxG0EAMYIGBMFwuf4Epih1DQTGC9GEBFLJBq4EaOhjQwTfoUjWNhoAjgYAawBbAEEAJwAXAAIiQzEZFEQxGESIAYCABBUffHVMULAjQzEZJRJEMRhENhoBiAErI0MxGSUSRDEYRDEWIwlJOBAjEkQ2GgGIAJojQzEZFEQxGEQxFiMJSTgQIxJENhoBF4gAUyNDMRkURDEYRDYaAReIADUjQzEZFEQxGBRENhoBF8AwNhoCNhoDF4gAAiNDigMAMg1EKYv9ZyiL/meABXByaWNli/9niYoBADEAMgkSRCqL/2eJigIAMQAyCRJEi/44BzIKEkSL/jgIMhASRLEyCov/shEishKyFCSyECKyAbOJigIAMQAyCRJEIiplRESL/jgAMgkSRIv+OAgiKmVEEkSL/jgHMgoSRCIpZUSL/0xwAEUBQQAhsTIKIillRHAARCIpZUSyEbISi/+yFIv/shUkshAisgGzsSIoZUQiKWVEcQREgAUgU29sZFCyBbIJI7IQIrIBs4mKAQAxADIJEkQiKGVEi/8SRCIoZUQiKGVEIillRCIoZUSxTLIRTLIVTLIUJLIQIrIBtrIJI7IQIrIBs4kiKGVEiQ==",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 4,
            "minor": 5,
            "patch": 3
        }
    },
    "events": [],
    "templateVariables": {}
}